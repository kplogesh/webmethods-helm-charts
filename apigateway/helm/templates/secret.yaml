# /*
#  * Copyright (c) 2021 Software AG, Darmstadt, Germany and/or its licensors
#  *
#  * SPDX-License-Identifier: Apache-2.0
#  *
#  *   Licensed under the Apache License, Version 2.0 (the "License");
#  *   you may not use this file except in compliance with the License.
#  *   You may obtain a copy of the License at
#  *
#  *       http://www.apache.org/licenses/LICENSE-2.0
#  *
#  *   Unless required by applicable law or agreed to in writing, software
#  *   distributed under the License is distributed on an "AS IS" BASIS,
#  *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  *   See the License for the specific language governing permissions and
#  *   limitations under the License.
#  *
#  */
{{- if .Values.secrets.generateElasticSecrets -}}
{{-  $name := (printf "%s" (include "apigateway.elasticsecret" .)) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $name }}
  annotations:
    helm.sh/resource-policy: keep
  labels:
    {{- with .Values.extraLabels -}}
    {{ toYaml . | nindent 4 }}
    {{- end }}  
type: kubernetes.io/basic-auth
stringData:
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace $name ) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  {{- $username := (get $secretData "username" | b64dec ) | default "sag-user" }}
  {{- $password := (get $secretData "password" | b64dec ) | default (randAlphaNum 12) }}
  {{- $roles := (get $secretData "roles" | b64dec ) | default "kibana_system,kibana_admin,superuser" }}
  username: {{ $username | quote }}
  password: {{ $password  | quote }}
  roles: {{ $roles | quote }}
---
{{-  $name := (printf "%s" (include "apigateway.kibanasecret" .)) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $name }}
  annotations:
    helm.sh/resource-policy: keep
  labels:
    {{- with .Values.extraLabels -}}
    {{ toYaml . | nindent 4 }}
    {{- end }}    
type: kubernetes.io/basic-auth
stringData:
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace $name ) | default dict }}
  {{- $secretData := get $secretObj "data"| default dict }}
  {{- $username := get $secretData "username" | b64dec | default  "kibana-user"  }}
  {{- $password := get $secretData "password" | b64dec | default (randAlphaNum 12) }}
  {{- $roles := get $secretData "roles" | b64dec | default "kibana_system,kibana_admin,superuser" }}
  username: {{ $username |quote }}
  password: {{ $password  | quote }}
  roles: {{ $roles |quote }}
{{- end }}
{{- if .Values.secrets.generateAdminSecret }}
---
{{-  $name := (include "apigateway.adminsecret" .) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $name }}
  annotations:
    helm.sh/resource-policy: keep
  labels:
    {{- with .Values.extraLabels -}}
    {{ toYaml . | nindent 4 }}
    {{- end }}
type: Opaque
stringData:
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace $name ) | default dict }}
  {{- $secretData := get $secretObj "data" | default dict }}
  {{- $password := get $secretData "password" | b64dec  | default (randAlphaNum 12) }}
  password: {{ $password | quote }}
{{- end -}}
