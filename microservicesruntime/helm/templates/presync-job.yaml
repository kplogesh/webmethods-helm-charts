# /*
#  * Copyright (c) 2023 Software AG, Darmstadt, Germany and/or its licensors
#  *
#  * SPDX-License-Identifier: Apache-2.0
#  *
#  *   Licensed under the Apache License, Version 2.0 (the "License");
#  *   you may not use this file except in compliance with the License.
#  *   You may obtain a copy of the License at
#  *
#  *       http://www.apache.org/licenses/LICENSE-2.0
#  *
#  *   Unless required by applicable law or agreed to in writing, software
#  *   distributed under the License is distributed on an "AS IS" BASIS,
#  *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  *   See the License for the specific language governing permissions and
#  *   limitations under the License.
#  *
#  */

{{- $fullName := include "common.names.fullname" . -}}
{{- $labels   := include "common.labels.standard" . -}}
{{- $imagePullSecrets := .Values.imagePullSecrets -}}
{{- $extraLabels      := .Values.extraLabels      -}}
{{- $globalArgoPreSyncEnabled := default false (pluck "enabled" .Values.argoPreSync | first) }}
{{- $context := . }}

{{- range $job := .Values.preSyncJobs }}
# If argoPreSync.enabled is true and job.isImageSyncTask is explicitly set to true, the job is created.
# If job.isImageSyncTask is not set (i.e., does not exist) or is explicitly set to false, the job is created regardless of the global argoPreSync parameter.
{{- if or (and $globalArgoPreSyncEnabled (hasKey $job "isImageSyncTask") $job.isImageSyncTask) (not (hasKey $job "isImageSyncTask")) (not $job.isImageSyncTask) }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $fullName }}-{{ $job.name }}
  labels:
    {{- $labels | nindent 4 }}
    {{- with $extraLabels }}
      {{- toYaml $extraLabels | nindent 4 }}
    {{- end }}
  {{- with $job.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
  {{- end }}
spec:
  {{- if hasKey $job "backoffLimit" }}
  backoffLimit: {{ $job.backoffLimit }}
  {{- end }}
  {{- if hasKey $job "activeDeadlineSeconds" }}
  activeDeadlineSeconds: {{ $job.activeDeadlineSeconds }}
  {{- end }}
  template:
    metadata:
      name: {{ $fullName }}-{{ $job.name }}
      labels:
        {{- $labels | nindent 8 }}
        {{- with $extraLabels }}
          {{- toYaml $extraLabels | nindent 8 }}
         {{- end }}
    spec:
      {{- if hasKey $job "serviceAccount" }}
      {{- if hasKey $job.serviceAccount "name" }}
      serviceAccountName: {{ $job.serviceAccount.name }}
      {{- else }}
      serviceAccountName: {{ $job.name }}
      {{- end }}
      {{- end }}
      {{- if hasKey $job "securityContext" }}
      {{- if $job.securityContext.runAsUser }}
      securityContext:
        runAsUser: {{ $job.securityContext.runAsUser }}
        {{- if $job.securityContext.runAsGroup }}
        runAsGroup: {{ $job.securityContext.runAsGroup }}
        {{- end }}
        {{- if $job.securityContext.fsGroup }}
        fsGroup: {{ $job.securityContext.fsGroup }}
        {{- end }}
      {{- end }}
      {{- end }}
      containers:
      - image: "{{ $job.image.repository }}:{{ $job.image.tag }}"
        imagePullPolicy: {{ $job.image.imagePullPolicy }}
        name: {{ $job.name }}
        env:
        - name: DEPLOYMENT
          value: {{ $fullName }}
        {{- with $job.env }}
        env:
{{ tpl (toYaml . ) $context | indent 8 }}
        {{- end }}
        {{- with $job.envFrom }}
        envFrom:
{{ toYaml . | indent 8 }}
        {{- end }}
        command: ["/bin/sh"]
        args:
          - "-c"
          - |
            DEST_REGISTRY=$(echo {{ $context.Values.testimage.repository }} | sed 's|/*$||')
            echo "DEST Registry is : $DEST_REGISTRY"
            IMAGE_NAME=$(basename $DEST_REGISTRY)
            IMAGE_TAG={{ $context.Values.testimage.tag }}

            echo $IMAGE_NAME $IMAGE_TAG

            skopeo copy \
            --src-creds $(SRC_USERNAME):$(SRC_PASSWORD) \
            --dest-creds $(DEST_USERNAME):$(DEST_PASSWORD) \
            $(SRC_REGISTRY_HOST)/$IMAGE_NAME:$IMAGE_TAG \
            $DEST_REGISTRY:$IMAGE_TAG
        {{- with $job.resources }}
        resources:
{{ toYaml . | indent 10 }}
        {{- end }}
        {{- with $job.volumeMounts }}
        volumeMounts:
{{ toYaml . | indent 8 }}
        {{- end }}
      {{- with $job.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with $job.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with $job.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      restartPolicy: {{ $job.restartPolicy }}
      {{- with $job.volumes }}
      volumes:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with $imagePullSecrets }}
      imagePullSecrets:
{{- toYaml . | nindent 8 }}
      {{- end }}

{{- end }}
{{- end -}}
